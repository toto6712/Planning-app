version: "3.7"

services:
  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - avs-network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8n.avs-autonomie.fr`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=avs-autonomie.fr
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=hkQFDON6YHz08WciGbJ7
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_RUNNERS_ENABLED=true
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
    depends_on:
      - redis
    volumes:
      - n8n_data:/home/node/.n8n
      - /local-files:/files
    networks:
      - avs-network

  redis:
    image: redis:6
    container_name: redis
    restart: always
    volumes:
      - ~/redis-data:/data
    networks:
      - avs-network

  postgres:
    image: postgres:15
    container_name: n8n-postgres
    restart: always
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: hkQFDON6YHz08WciGbJ7
      POSTGRES_DB: n8ndb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - avs-network

  n8n-worker:
    image: n8nio/n8n
    restart: always
    command: worker
    depends_on:
      - redis
      - postgres
    environment:
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=hkQFDON6YHz08WciGbJ7
      - N8N_ENCRYPTION_KEY=hjLEypDg1X9JxT1O8qSwgUvpPr1OT1Je
    networks:
      - avs-network

  wordpress:
    image: wordpress:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: wordpress_db
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD: wp_pass
      WORDPRESS_DB_NAME: wp_db
    volumes:
      - wordpress_data:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`dev.avs-autonomie.fr`)"
      - "traefik.http.routers.wordpress.entrypoints=websecure"
      - "traefik.http.routers.wordpress.tls=true"
      - "traefik.http.routers.wordpress.tls.certresolver=mytlschallenge"
    networks:
      - avs-network

  wordpress_db:
    image: mariadb:10.5
    restart: always
    environment:
      MYSQL_DATABASE: wp_db
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
      MYSQL_ROOT_PASSWORD: root_wp_pass
    volumes:
      - wordpress_db_data:/var/lib/mysql
    networks:
      - avs-network

  osrm:
    image: osrm/osrm-backend:latest
    container_name: osrm-local
    ports:
      - "5000:5000"
    volumes:
      - /root/osrm-data/data:/data
    command: >
      osrm-routed --algorithm mld /data/alsace-latest.osrm --port 5000 --ip 0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      - OSRM_THREADS=4
    mem_limit: 4g
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - avs-network

  # === PLANNING AVS AUTONOMIE ===
  planning-backend:
    build: ./planning-app/backend
    container_name: planning-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./planning-app/backend:/app
      - planning-cache:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.planning-api.rule=Host(`api.avs-autonomie.fr`)"
      - "traefik.http.routers.planning-api.entrypoints=websecure"
      - "traefik.http.routers.planning-api.tls=true"
      - "traefik.http.routers.planning-api.tls.certresolver=mytlschallenge"
      - "traefik.http.services.planning-api.loadbalancer.server.port=8001"
      # CORS pour permettre planning.avs-autonomie.fr
      - "traefik.http.middlewares.planning-cors.headers.accessControlAllowOriginList=https://planning.avs-autonomie.fr"
      - "traefik.http.middlewares.planning-cors.headers.accessControlAllowMethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.planning-cors.headers.accessControlAllowHeaders=*"
      - "traefik.http.routers.planning-api.middlewares=planning-cors"
    networks:
      - avs-network

  planning-frontend:
    build: ./planning-app/frontend
    container_name: planning-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=https://api.avs-autonomie.fr
    volumes:
      - ./planning-app/frontend:/app
      - /app/node_modules
    depends_on:
      - planning-backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.planning-web.rule=Host(`planning.avs-autonomie.fr`)"
      - "traefik.http.routers.planning-web.entrypoints=websecure"
      - "traefik.http.routers.planning-web.tls=true"
      - "traefik.http.routers.planning-web.tls.certresolver=mytlschallenge"
      - "traefik.http.services.planning-web.loadbalancer.server.port=3000"
    networks:
      - avs-network

volumes:
  traefik_data:
    external: true
  n8n_data:
    external: true
  pgdata:
  wordpress_db_data:
  wordpress_data:
  planning-cache:  # Cache des temps de trajet

networks:
  avs-network:
    external: true